{"meta":{"title":"RyanJang, development story","subtitle":"RyanJang's IT Blog","description":null,"author":"Ryan Jang","url":"https://hiship56.github.io"},"pages":[],"posts":[{"title":"강사 가이드","slug":"강사-가이드","date":"2018-04-03T06:53:13.000Z","updated":"2018-04-03T06:53:13.262Z","comments":true,"path":"2018/04/03/강사-가이드/","link":"","permalink":"https://hiship56.github.io/2018/04/03/강사-가이드/","excerpt":"","text":"Related Posts obs player 설치 및 조작법 역할display 및 cam으로 동영상을 녹화하고 streaming이 가능한 특정 프로토콜(RTMP)로 송출하는 역할을 합니다. 설치홈페이지(https://obsproject.com/ko) 에서 사용환경에 맞게 다운로드 후 설치해주세요. 조작법1) 장면 및 소스 목록: 사진1의 좌측 하단에 장면을 추가하고 소스목록에서 live로 보여주고 싶은 소스(디스플레이 캡쳐, 비디오 캡쳐 등)를 선택하여 설정할 수 있습니다.2) 설정: 사진1의 우측 하단 설정버튼을 누르면 설정 창이 뜨고 사진2의 좌측에 방송을 클릭하면 Live streaming을 위한 설정을 할 수 있습니다. – 방송형식: 사용자 임의 방송 서버 – URL: rtmp://13.125.58.192:1935/live – 스트림 키: 양재동 코드랩에서 제공한 키3) 생방송 시작: 사진1의 우측하단 방송시작 버튼을 클릭해주세요.4) 녹화: 방송시작 버튼을 누르면 양재동 코드랩 서버에서 자동으로 동영상을 저장합니다. 사진 1) 사진 2)","categories":[],"tags":[]},{"title":"v-on으로 Event 실행하기","slug":"v-on으로-Event-실행하기","date":"2018-03-31T05:11:12.000Z","updated":"2018-03-31T05:36:14.821Z","comments":true,"path":"2018/03/31/v-on으로-Event-실행하기/","link":"","permalink":"https://hiship56.github.io/2018/03/31/v-on으로-Event-실행하기/","excerpt":"","text":"v-on으로 Event 실행하기이번 시간은 v-on으로 event를 실행시키는 방법에 대해 알아보겠습니다.v-on은 약어로 @를 사용할 수 있습니다. click event로 data 변경하기 1234&lt;div id=\"app\"&gt; &lt;button v-on:click=\"counter += 1\"&gt;Add 1&lt;/button&gt; &lt;p&gt;위 버튼을 클릭한 횟수는 &#123;&#123; counter &#125;&#125; 번 입니다.&lt;/p&gt;&lt;/div&gt; 123456new Vue(&#123; el: '#app', data: &#123; counter: 0 &#125;&#125;) Enter로 이벤트 실행하기 123&lt;div id=\"example-1\"&gt; &lt;input @click=\"counter += 1\"&gt;Add 1&lt;/input&gt;&lt;/div&gt; 123456789101112new Vue(&#123; el: '#app', data: &#123; counter: 0, counter2: 0 &#125;, methods: &#123; Enter: function() &#123; this.counter2 += 1; &#125; &#125;&#125;) 이외에도 다양한 이벤트들이 있습니다.(참고: https://www.w3schools.com/tags/ref_eventattributes.asp)간단한 예제라 쉽게 이해하셨으리라 생각합니다. 다음 링크를 통해 예제 코드를 확인해보세요.https://jsfiddle.net/ryanjang/5tb1vw2o/","categories":[{"name":"vue","slug":"vue","permalink":"https://hiship56.github.io/categories/vue/"}],"tags":[]},{"title":"Live Streaming Service","slug":"Live-Streaming-Service","date":"2018-03-30T02:03:20.000Z","updated":"2018-04-03T02:13:58.869Z","comments":true,"path":"2018/03/30/Live-Streaming-Service/","link":"","permalink":"https://hiship56.github.io/2018/03/30/Live-Streaming-Service/","excerpt":"","text":"사용하게 된 배경양재동 코드랩(codelabs.kr)은 코딩교육과 관련된 온라인, 오프라인 강의 서비스를 제공하고 있습니다.이와 관련하여 저희는 오프라인 강의를 Live로 회원분들께 제공할 수 있는 기능을 추가하였고, 기능 개발에 대한 전체적인 과정을 공유드리고자 합니다. 목차 nginx &amp; rtmp server 구축하기 Web Front에 동영상 삽입하기 obs player 설치 및 조작법 Test 1) nginx &amp; rtmp server 구축하기 nginx 웹 서버에도 동영상을 streaming 할 수 있는 외부 모듈(rtmp)이 있습니다. 하기와 같이 각자의 환경에 맞게 nginx와 rtmp 서버를 구축해봅시다. mac os local 환경에서 setting 하는 방법 Command(nginx와 rtmp 서버 설치)1234brew tap denji/nginxbrew options nginx-fullbrew info nginx-fullbrew install nginx-full --with-rtmp-module --with-debug Config(usr/local/etc/nginx/nginx.conf의 하단에 추가)1234567891011121314151617181920rtmp &#123; server &#123; listen 1935; chunk_size 4096; application live &#123; live on; #record all; #record_path /tmp; #record_suffix _%d%m%Y_%H%M%S.flv; #record_max_size 100000K; #record_interval 30m; #record_max_frames 4; #record_unique on; #record_append on; #record_interval 5s; #record_notify on; &#125; &#125;&#125; nginx server control123nginxnginx -s stopnginx -s reload AWS EC2 ubuntu 환경에서 setting하는 방법 Command(nginx와 rtmp 서버 설치)123456789101112131415sudo apt-get install build-essential libpcre3 libpcre3-dev libssl-devmkdir ~/workingcd ~/workingwget http://nginx.org/download/nginx-1.7.5.tar.gzwget https://github.com/arut/nginx-rtmp-module/archive/master.zipsudo apt-get install unziptar -zxvf nginx-1.7.5.tar.gzunzip master.zipcd nginx-1.7.5./configure --with-http_ssl_module --add-module=../nginx-rtmp-module-mastermakesudo make installsudo wget https://raw.github.com/JasonGiedymin/nginx-init-ubuntu/master/nginx -O /etc/init.d/nginxsudo chmod +x /etc/init.d/nginxsudo update-rc.d nginx defaults Config(usr/local/nginx/conf/nginx.conf의 하단에 추가)1234567891011121314151617181920rtmp &#123; server &#123; listen 1935; chunk_size 4096; application live &#123; live on; #record all; #record_path /tmp; #record_suffix _%d%m%Y_%H%M%S.flv; #record_max_size 100000K; #record_interval 30m; #record_max_frames 4; #record_unique on; #record_append on; #record_interval 5s; #record_notify on; &#125; &#125;&#125; nginx server control123sudo service nginx startsudo service nginx stopsudo service nginx reload video record 동영상을 녹화하기 위해서는 2가지 방법이 있습니다.1) 동영상 플레이어(obs player 등)에서 녹화하기 버튼을 눌러 녹화(설정-출력-녹화 경로 setting)한다.2) nginx.conf에서 record 설정을 하여 특정 경로에 저장한다. 2) Web Front에 동영상 삽입하기 nginx 서버에서 보내주는 동영상을 제공하기 위해 Adobe Flash Professional의 embed 태그를 사용하였습니다. 1234567&lt;embed src=\"/static/js/vgaplayer.swf\" width=\"100%\" height=\"100%\"allowScriptAccess=\"sameDomain\"allowFullScreen=\"true\"type=\"application/x-shockwave-flash\"FlashVars=\"url=rtmp://http://localhost:1935/live/test&amp;fullscreen=1\"pluginspage=\"http://www.adobe.com/go/getflashplayer\"bgcolor=\"#ffffff\"/&gt; vgaplayer.swf file 및 FlashVars 옵션(참조: https://github.com/euske/vgaplayer) Embed 태그 옵션(참조: https://helpx.adobe.com/kr/flash/kb/flash-object-embed-tag-attributes.html) 3) obs player 설치 및 조작법 역할display 및 cam으로 동영상을 녹화하고 streaming이 가능한 특정 프로토콜(RTMP)로 송출하는 역할을 합니다. 설치홈페이지(https://obsproject.com/ko) 에서 사용환경에 맞게 다운로드 후 설치해주세요. 조작법 1) 장면 및 소스 목록: 사진1의 좌측 하단에 장면을 추가하고 소스목록에서 live로 보여주고 싶은 소스(디스플레이 캡쳐, 비디오 캡쳐 등)를 선택하여 설정할 수 있습니다. 2) 설정: 사진1의 우측 하단 설정버튼을 누르면 설정 창이 뜨고 왼쪽의 방송을 클릭하면 사진2와 같이 Live streaming을 위한 설정을 할 수 있습니다. 양재동 코드랩 페이지에 실시간 동영상을 제공하기 위해 방송형식은 사용자 임의 방송 서버를 선택하였으며 URL은 local의 rtmp주소(rtmp://localhost:1935)와 nginx.conf에서 설정한 application name(/live)을 설정하였고, 스트림 키는 임의로 test를 설정하였습니다. 3) 방송 및 녹화: 사진1의 우측 하단에 방송시작과 녹화시작 버튼으로 조작할 수 있습니다. 사진 1) 사진 2) 4) Test nginx 서버 실행 obs player 방송시작 버튼 클릭 해당 페이지에서 live streaming 동작 화면 확인","categories":[],"tags":[]},{"title":"VueJS binding to Attribute, v-once, v-html","slug":"VueJS-binding-to-Attribute-v-once-v-html","date":"2018-03-24T07:21:26.000Z","updated":"2018-03-24T07:53:40.923Z","comments":true,"path":"2018/03/24/VueJS-binding-to-Attribute-v-once-v-html/","link":"","permalink":"https://hiship56.github.io/2018/03/24/VueJS-binding-to-Attribute-v-once-v-html/","excerpt":"","text":"이번 시간에는 속성 binding과 v-once, v-html에 대해 알아보겠습니다. 1234567891011121314151617181920212223242526272829303132333435363738394041&lt;!DOCTYPE html&gt;&lt;html lang=\"ko\"&gt;&lt;head&gt;&lt;meta charset=\"utf-8\"/&gt;&lt;title&gt;&lt;/title&gt; &lt;script src=\"https://unpkg.com/vue@2.0.5/dist/vue.js\"&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;div id=\"app\"&gt; &lt;p&gt; &lt;a v-bind:href='url'&gt;www.naver.com&lt;/a&gt; &lt;/p&gt; &lt;p v-once&gt; &#123;&#123;notReRender&#125;&#125; &lt;/p&gt; &lt;p&gt; &#123;&#123;changeHello()&#125;&#125; &lt;/p&gt; &lt;p v-html='html'&gt;&lt;/p&gt;&lt;/div&gt;&lt;script&gt; new Vue(&#123; el: '#app', data: &#123; url: 'www.naver.com', notReRender: 'hello', html: '&lt;button&gt;Click!&lt;/button&gt;' &#125;, methods: &#123; changeHello: function() &#123; this.notReRender = 'helloWorld' return this.notReRender &#125; &#125; &#125;)&lt;/script&gt;&lt;/body&gt;&lt;/html&gt; v-bind를 통해 속성에서 인스턴스의 data를 받아와 a태그가 naver로 연결될 수 있도록 하였습니다. v-once를 통해 data를 binding하면 changeHello라는 함수가 실행되어도 변경되지 않습니다. v-html을 통해 html 코드를 직접 p태그에 넣었습니다. 기본적인 코드라 이해하시는데 큰 어려움은 없을 것 같습니다. 다음 링크를 통해 예제 코드를 확인해보세요. https://jsfiddle.net/ryanjang/9ruescco/","categories":[{"name":"vue","slug":"vue","permalink":"https://hiship56.github.io/categories/vue/"}],"tags":[]},{"title":"VueJS data 변경하기","slug":"VueJS-data-변경하기","date":"2018-03-17T05:40:46.000Z","updated":"2018-03-17T06:18:55.524Z","comments":true,"path":"2018/03/17/VueJS-data-변경하기/","link":"","permalink":"https://hiship56.github.io/2018/03/17/VueJS-data-변경하기/","excerpt":"","text":"VueJS에서 data를 변경하는 방법을 알아봅시다.지난 시간에 이어 input태그를 추가해서 입력한 data로 기존 data를 변경해봅시다.우선 v-on으로 이벤트(input)를 정의하고 이벤트가 일어났을 때 호출할 함수를 정의합니다.changeTitle 함수에서 this를 통해 정의한 data로 접근하여 원하는 값으로 변경할 수 있습니다. 12345678910111213141516171819202122232425262728&lt;!DOCTYPE html&gt;&lt;html lang=\"ko\"&gt;&lt;head&gt;&lt;meta charset=\"utf-8\"/&gt;&lt;title&gt;&lt;/title&gt; &lt;script src=\"https://unpkg.com/vue@2.0.5/dist/vue.js\"&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt; &lt;div id=\"app\"&gt; &lt;input type=\"text\" v-on:input=\"changeTitle\"&gt; &#123;&#123;title&#125;&#125; &lt;/div&gt;&lt;script&gt;new Vue(&#123; el: '#app', data: &#123; title: \"hello world\" &#125;, methods: &#123; changeTitle() &#123; this.title = \"change Title\" &#125; &#125;&#125;)&lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 다음 링크를 통해 예제 코드를 확인해보세요.https://jsfiddle.net/ryanjang/ubg8nagz/","categories":[{"name":"vue","slug":"vue","permalink":"https://hiship56.github.io/categories/vue/"}],"tags":[]},{"title":"VueJS 시작하기","slug":"VueJS-시작하기","date":"2018-03-17T03:31:12.000Z","updated":"2018-03-17T05:40:03.937Z","comments":true,"path":"2018/03/17/VueJS-시작하기/","link":"","permalink":"https://hiship56.github.io/2018/03/17/VueJS-시작하기/","excerpt":"","text":"VueJS Application 설정하기 안녕하세요, 오늘은 vuejs script를 참조하여 간단히 data binding 하는 방법을 소개할까 합니다. 먼저 vuejs script를 아래와 같이 참조해주세요. 12345678910&lt;!DOCTYPE html&gt;&lt;html lang=\"ko\"&gt;&lt;head&gt; &lt;meta charset=\"utf-8\"/&gt; &lt;title&gt;&lt;/title&gt; &lt;script src=\"https://unpkg.com/vue@2.0.5/dist/vue.js\"&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;/body&gt;&lt;/html&gt; 그리고 이제 script에서 vuejs CDN을 참조하고 data를 binding 해봅시다. 먼저 vuejs script를 아래와 같이 참조해주세요.1&lt;script src=\"https://unpkg.com/vue@2.0.5/dist/vue.js\"&gt;&lt;/script&gt; 참조한 다음 body 안의 script에 다음과 같이 넣어주세요.123456new Vue(&#123; el: '#app', data: &#123; title: \"hello world\" &#125;&#125;) 전체 소스1234567891011121314151617181920212223&lt;!DOCTYPE html&gt;&lt;html lang=\"ko\"&gt;&lt;head&gt;&lt;meta charset=\"utf-8\"/&gt;&lt;title&gt;&lt;/title&gt; &lt;script src=\"https://unpkg.com/vue@2.0.5/dist/vue.js\"&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt; &lt;div id=\"app\"&gt; &#123;&#123;title&#125;&#125; &lt;/div&gt; &lt;script&gt;new Vue(&#123; el: '#app', data: &#123; title: \"hello world\" &#125;&#125;)&lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 다음 링크를 통해 예제 코드를 확인해보세요.https://jsfiddle.net/ryanjang/ecte46rb/","categories":[{"name":"vue","slug":"vue","permalink":"https://hiship56.github.io/categories/vue/"}],"tags":[]},{"title":"ryan's vuejs 시작하기","slug":"vue","date":"2018-03-10T02:45:54.000Z","updated":"2018-03-10T04:01:19.043Z","comments":true,"path":"2018/03/10/vue/","link":"","permalink":"https://hiship56.github.io/2018/03/10/vue/","excerpt":"","text":"초급 개발자의 vuejs 이야기를 준비하고 있습니다.","categories":[{"name":"vue","slug":"vue","permalink":"https://hiship56.github.io/categories/vue/"}],"tags":[]}]}